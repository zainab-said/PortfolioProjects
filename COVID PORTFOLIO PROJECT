SELECT *
FROM PortfolioProject..CovidDeaths
ORDER by 3,4

/*SELECT *
FROM PortfolioProject..CovidVaccinations
ORDER BY 3,4 */

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject..CovidDeaths
ORDER BY 1,2

--Looking at Total Cases vs Total Deaths
--Shows likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE location = 'Nigeria'
ORDER BY 1,2

--Looking at Total cases vs population
--Shows percentage of the population that got Covid

SELECT location, date, population, total_cases, (total_cases/population)*100 AS PercentofPopulationInfected
FROM PortfolioProject..CovidDeaths
WHERE location = 'Nigeria'
ORDER BY 1,2

--Looking at Countries with highest infection rate compared to population

SELECT location, population, MAX(total_cases) AS HighestNumberofCases, MAX((total_cases/population))*100 AS PercentofPopulationInfected
FROM PortfolioProject..CovidDeaths
--WHERE location = 'Nigeria'
GROUP BY location, population
ORDER BY PercentofPopulationInfected DESC

--Showing Countries with the Highest Death Count per Population

SELECT location, MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location = 'Nigeria'
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount DESC

--By Continent

SELECT location, MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location = 'Nigeria'
WHERE continent is null
GROUP BY location
ORDER BY TotalDeathCount DESC

SELECT continent, MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location = 'Nigeria'
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC

--GLOBAL NUMBERS

SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(new_cases) * 100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
--WHERE location = 'Nigeria'
WHERE continent is not null
--GROUP BY date
ORDER BY 1,2

--changing data type 
ALTER TABLE PortfolioProject..CovidDeaths 
--ALTER COLUMN new_cases FLOAT
ALTER COLUMN new_deaths FLOAT

--Looking at Total Population vs. Vaccinations

SELECT dea.continent, dea.[location], dea.date, dea.population, vac.new_vaccinations, 
SUM(vac.new_vaccinations) OVER (Partition by dea.[location] ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
ON dea.[location] = vac.[location]
AND dea.[date] = vac.[date]
WHERE dea.continent is not null
ORDER BY 2,3

--USE CTE

WITH PopvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS 
(SELECT dea.continent, dea.[location], dea.date, dea.population, vac.new_vaccinations, 
SUM(vac.new_vaccinations) OVER (Partition by dea.[location] ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
ON dea.[location] = vac.[location]
AND dea.[date] = vac.[date]
WHERE dea.continent is not null)
--ORDER BY 2,3)

SELECT *, (RollingPeopleVaccinated/population) * 100
FROM PopvsVac

--TEMP TABLE

CREATE TABLE #PercentPopulationVaccinated 
(continent nvarchar(255),
location nvarchar(255),
date datetime,
population numeric,
new_vaccinations numeric, 
RollingPeopleVaccinated numeric)

INSERT INTO #PercentPopulationVaccinated 
SELECT dea.continent, dea.[location], dea.date, dea.population, vac.new_vaccinations, 
SUM(vac.new_vaccinations) OVER (Partition by dea.[location] ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
ON dea.[location] = vac.[location]
AND dea.[date] = vac.[date]
WHERE dea.continent is not null
--ORDER BY 2,3)

SELECT *, (RollingPeopleVaccinated/population) * 100
FROM #PercentPopulationVaccinated 


-- Creating View to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.[location], dea.date, dea.population, vac.new_vaccinations, 
SUM(vac.new_vaccinations) OVER (Partition by dea.[location] ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
ON dea.[location] = vac.[location]
AND dea.[date] = vac.[date]
WHERE dea.continent is not null
--ORDER BY 2,3)

SELECT * 
FROM PercentPopulationVaccinated